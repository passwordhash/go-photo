name: CI/CD

on:
    push:
        branches:
            - '*'
    pull_request:
        branches:
            - '*'

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Checkout protobuf repository
              uses: actions/checkout@v3
              with:
                  repository: passwordhash/protobuf-files
                  path: api

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: '1.22'

            - name: Update PATH
              run: echo "${{ runner.workspace }}/bin" >> $GITHUB_PATH

            - name: Install dependencies
              run: go mod download

            - name: Build tests
              run: make tests-build

            - name: Run tests
              run: make run-tests

    build-and-push:
        if: >-
            (github.event_name == 'push' && github.ref == 'refs/heads/master')
            || (github.event_name == 'pull_request' && github.base_ref == 'master')
        runs-on: ubuntu-latest
        steps:
            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                    username: ${{ vars.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Checkout protobuf repository
                uses: actions/checkout@v3
                with:
                    repository: ${{ github.repository_owner }}/protobuf-files
                    path: proto

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Build and push
                uses: docker/build-push-action@v6
                with:
                    context: .
                    push: true
                    tags: |
                        ${{ github.repository }}:latest
                        ${{ github.repository }}:${{ vars.VERSION }}
                    no-cache: true

